-- MySQL Script generated by MySQL Workbench
-- Fri Oct 28 10:37:26 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema restaurant
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema restaurant
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `restaurant` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema new_schema1
-- -----------------------------------------------------
USE `restaurant` ;

-- -----------------------------------------------------
-- Table `restaurant`.`coupons`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`coupons` (
  `coupon_id` INT NOT NULL,
  `coupon_name` VARCHAR(50) NULL,
  `max_discount` INT NULL,
  `period_of_validity` INT NULL,
  PRIMARY KEY (`coupon_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurant`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS  (
  `idorder` INT UNSIGNED NOT NULL,
  `idcoupoun` INT UNSIGNED ZEROFILL NOT NULL,
  `total_amount` INT UNSIGNED ZEROFILL NOT NULL,
  `idcustomer` INT UNSIGNED NOT NULL,
  `date` DATE NULL,
  `payment_mode` VARCHAR(45) NULL,
  `table_no` INT NULL,
  `coupons_coupon_id` INT NOT NULL,
  PRIMARY KEY (`idorder`, `coupons_coupon_id`),
  UNIQUE INDEX `idorder_UNIQUE` (`idorder` ASC) VISIBLE,
  UNIQUE INDEX `idcoupoun_UNIQUE` (`idcoupoun` ASC) INVISIBLE,
  INDEX `idcustomer_idx` (`idcustomer` ASC) VISIBLE,
  INDEX `fk_order_coupons1_idx` (`coupons_coupon_id` ASC) VISIBLE,
  CONSTRAINT `idcustomer`
    FOREIGN KEY (`idcustomer`)
    REFERENCES `restaurant`.`customer` (`idcustomer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_coupons1`
    FOREIGN KEY (`coupons_coupon_id`)
    REFERENCES `restaurant`.`coupons` (`coupon_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurant`.`reviews and ratings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`reviews and ratings` (
  `customer_id` INT UNSIGNED NOT NULL,
  `order_id` INT UNSIGNED NOT NULL,
  `rating` INT(1) NULL,
  `reviews` VARCHAR(500) NULL,
  `date` DATE NULL,
  PRIMARY KEY (`order_id`),
  INDEX `c_idx` (`customer_id` ASC) VISIBLE,
  CONSTRAINT `c`
    FOREIGN KEY (`customer_id`)
    REFERENCES `restaurant`.`customer` (`idcustomer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `o`
    FOREIGN KEY (`order_id`)
    REFERENCES `restaurant`.`order` (`idorder`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurant`.`dining_table`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`dining_table` (
  `dining_table_id` INT NOT NULL,
  `max_capacity` INT NULL,
  `reservation_satus` VARCHAR(10) NULL,
  PRIMARY KEY (`dining_table_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurant`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`customer` (
  `idcustomer` INT UNSIGNED NOT NULL,
  `customer_name` VARCHAR(150) NOT NULL,
  `averageamount_spent` INT UNSIGNED NULL,
  `email` VARCHAR(100) NOT NULL,
  `phone_no` INT(10) UNSIGNED NOT NULL,
  `address` VARCHAR(200) NULL,
  `customercol` VARCHAR(45) NULL,
  `reviews and ratings_order_id` INT UNSIGNED NOT NULL,
  `dining_table_dining_table_id` INT NOT NULL,
  PRIMARY KEY (`idcustomer`, `reviews and ratings_order_id`, `dining_table_dining_table_id`),
  UNIQUE INDEX `idcustomer_UNIQUE` (`idcustomer` ASC) VISIBLE,
  UNIQUE INDEX `phone_no_UNIQUE` (`phone_no` ASC) VISIBLE,
  INDEX `fk_customer_reviews and ratings1_idx` (`reviews and ratings_order_id` ASC) VISIBLE,
  INDEX `fk_customer_dining_table1_idx` (`dining_table_dining_table_id` ASC) VISIBLE,
  CONSTRAINT `fk_customer_reviews and ratings1`
    FOREIGN KEY (`reviews and ratings_order_id`)
    REFERENCES `restaurant`.`reviews and ratings` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_dining_table1`
    FOREIGN KEY (`dining_table_dining_table_id`)
    REFERENCES `restaurant`.`dining_table` (`dining_table_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurant`.`menu`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`menu` (
  `iditem` INT UNSIGNED NOT NULL,
  `item name` VARCHAR(100) NOT NULL,
  `isjain` BIT(1) NOT NULL,
  `avaialability` BIT(1) NOT NULL,
  `price` FLOAT UNSIGNED NOT NULL,
  `item_components` VARCHAR(150) NULL,
  PRIMARY KEY (`iditem`),
  UNIQUE INDEX `iditem_UNIQUE` (`iditem` ASC) VISIBLE,
  UNIQUE INDEX `itenm name_UNIQUE` (`item name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurant`.`Designation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`Designation` (
  `designation name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`designation name`),
  UNIQUE INDEX `designation name_UNIQUE` (`designation name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurant`.`restaurant expenses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`restaurant expenses` (
  `record_id` INT NOT NULL,
  `description` VARCHAR(100) NULL,
  `date` DATE NULL,
  `amount` INT NULL,
  `withdrawer_id` INT NULL,
  `mode_of_transaction` VARCHAR(50) NULL,
  PRIMARY KEY (`record_id`),
  INDEX `w_idx` (`withdrawer_id` ASC) VISIBLE,
  CONSTRAINT `w`
    FOREIGN KEY (`withdrawer_id`)
    REFERENCES `restaurant`.`staff` (`staff id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurant`.`staff`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`staff` (
  `staff id` INT NOT NULL,
  `staff_name` VARCHAR(50) NULL,
  `designation_name` VARCHAR(100) NULL,
  `date_joined` DATE NULL,
  `salary` INT NULL,
  `current_month_leaves` INT UNSIGNED NULL,
  `restaurant expenses_record_id` INT NOT NULL,
  PRIMARY KEY (`staff id`, `restaurant expenses_record_id`),
  INDEX `fk_staff_restaurant expenses1_idx` (`restaurant expenses_record_id` ASC) VISIBLE,
  CONSTRAINT `d`
    FOREIGN KEY (`designation_name`)
    REFERENCES `restaurant`.`Designation` (`designation name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_staff_restaurant expenses1`
    FOREIGN KEY (`restaurant expenses_record_id`)
    REFERENCES `restaurant`.`restaurant expenses` (`record_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurant`.`kitchen inventory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`kitchen inventory` (
  `raw_material_id` INT NOT NULL,
  `raw_materail_name` VARCHAR(100) NULL,
  `price` FLOAT NULL,
  `quatity_available` INT NULL,
  `expiry_date` DATE NULL,
  `quantity_ordered` INT NULL,
  PRIMARY KEY (`raw_material_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurant`.`reservation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`reservation` (
  `reservation_id` INT NOT NULL,
  `customer_id` INT UNSIGNED NULL,
  `table_no` INT NULL,
  `date` DATETIME(1) NULL,
  `people_count` INT NULL,
  PRIMARY KEY (`reservation_id`),
  INDEX `c_idx` (`customer_id` ASC) VISIBLE,
  INDEX `t_idx` (`table_no` ASC) VISIBLE,
  CONSTRAINT `c1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `restaurant`.`customer` (`idcustomer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `t1`
    FOREIGN KEY (`table_no`)
    REFERENCES `restaurant`.`dining_table` (`dining_table_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurant`.`contains`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`contains` (
  `order_id` INT UNSIGNED NOT NULL,
  `item_id` INT UNSIGNED NOT NULL,
  INDEX `o_idx` (`order_id` ASC) VISIBLE,
  INDEX `i_idx` (`item_id` ASC) VISIBLE,
  CONSTRAINT `order`
    FOREIGN KEY (`order_id`)
    REFERENCES `restaurant`.`order` (`idorder`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `item_in_menu`
    FOREIGN KEY (`item_id`)
    REFERENCES `restaurant`.`menu` (`iditem`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurant`.`customer_has_coupons`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`customer_has_coupons` (
  `customer_idcustomer` INT UNSIGNED NOT NULL,
  `coupons_coupon_id` INT NOT NULL,
  PRIMARY KEY (`customer_idcustomer`, `coupons_coupon_id`),
  INDEX `fk_customer_has_coupons_coupons1_idx` (`coupons_coupon_id` ASC) VISIBLE,
  INDEX `fk_customer_has_coupons_customer1_idx` (`customer_idcustomer` ASC) VISIBLE,
  CONSTRAINT `fk_customer_has_coupons_customer1`
    FOREIGN KEY (`customer_idcustomer`)
    REFERENCES `restaurant`.`customer` (`idcustomer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_has_coupons_coupons1`
    FOREIGN KEY (`coupons_coupon_id`)
    REFERENCES `restaurant`.`coupons` (`coupon_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurant`.`menu_has_kitchen inventory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`menu_has_kitchen inventory` (
  `menu_iditem` INT UNSIGNED NOT NULL,
  `kitchen inventory_raw_material_id` INT NOT NULL,
  PRIMARY KEY (`menu_iditem`, `kitchen inventory_raw_material_id`),
  INDEX `fk_menu_has_kitchen inventory_kitchen inventory1_idx` (`kitchen inventory_raw_material_id` ASC) VISIBLE,
  INDEX `fk_menu_has_kitchen inventory_menu1_idx` (`menu_iditem` ASC) VISIBLE,
  CONSTRAINT `fk_menu_has_kitchen inventory_menu1`
    FOREIGN KEY (`menu_iditem`)
    REFERENCES `restaurant`.`menu` (`iditem`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_menu_has_kitchen inventory_kitchen inventory1`
    FOREIGN KEY (`kitchen inventory_raw_material_id`)
    REFERENCES `restaurant`.`kitchen inventory` (`raw_material_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `restaurant` ;

-- -----------------------------------------------------
-- Placeholder table for view `restaurant`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`view1` (`id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `restaurant`.`view2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurant`.`view2` (`id` INT);

-- -----------------------------------------------------
-- View `restaurant`.`view1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `restaurant`.`view1`;
USE `restaurant`;
CREATE  OR REPLACE VIEW `view1`;

-- -----------------------------------------------------
-- View `restaurant`.`view2`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `restaurant`.`view2`;
USE `restaurant`;
CREATE  OR REPLACE VIEW `view2` ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';
flush privileges;
insert into `restaurant`.`order` values ('mihir');
